import numpy as np
import matplotlib.pyplot as plt

# Input data and labels for AND gate
X = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y = np.array([0, 0, 0, 1])

# Initial weights and threshold
w = np.array([1, 1])
theta = 1.5

# Initialize y_pred as an empty list
y_pred = []

# Heaviside function
def Heaviside(net):
    if net >= theta:
        return 1
    else:
        return 0

# Perceptron logic
for i in range(X.shape[0]):
    x = X[i]
    wtsum = np.dot(x, w)
    pred = Heaviside(wtsum)
    print(x[0], " AND ", x[1], " -> ", pred)
    y_pred.append(pred)  # append to y_pred array

# Plotting the decision boundary and data points
slope = -w[0] / w[1]
intercept = theta / w[1]
x_plane = np.linspace(-2, 2, 10)
y_plane = slope * x_plane + intercept

# Plot the data and the decision boundary
plt.scatter(X[:, 0], X[:, 1], c=y)
plt.plot(x_plane, y_plane, '-')
plt.xlim([-0.2, 1.2])
plt.ylim([-0.2, 1.2])
plt.title("AND Gate Perceptron with Decision Boundary")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.grid(True)
plt.show()
